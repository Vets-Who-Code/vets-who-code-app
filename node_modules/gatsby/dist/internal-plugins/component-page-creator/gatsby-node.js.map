{"version":3,"sources":["../../../src/internal-plugins/component-page-creator/gatsby-node.js"],"names":["globCB","require","Promise","_","chokidar","systemPath","glob","promisify","createPath","validatePath","exports","createPagesStatefully","options","doneCb","store","boundActionCreators","createPage","deletePage","program","getState","pagesDirectory","posix","join","directory","exts","extensions","map","e","slice","files","forEach","_createPage","file","watch","on","includes","path","push","pages","filter","p","component","f","filePath","relative","page"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,SAASC,QAAS,MAAT,CAAf;AACA,IAAMC,UAAUD,QAAS,UAAT,CAAhB;AACA,IAAME,IAAIF,QAAS,QAAT,CAAV;AACA,IAAMG,WAAWH,QAAS,UAAT,CAAjB;AACA,IAAMI,aAAaJ,QAAS,MAAT,CAAnB;;AAEA,IAAMK,OAAOJ,QAAQK,SAAR,CAAkBP,MAAlB,CAAb;;AAEA,IAAMQ,aAAaP,QAAS,eAAT,CAAnB;AACA,IAAMQ,eAAeR,QAAS,iBAAT,CAArB;;AAEA;AACA;AACA;AACA;AACA;AACAS,QAAQC,qBAAR;AAAA,uFAAgC,uBAE9BC,OAF8B,EAG9BC,MAH8B;AAAA,QAC5BC,KAD4B,QAC5BA,KAD4B;AAAA,QACrBC,mBADqB,QACrBA,mBADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtBC,sBALsB,GAKKD,mBALL,CAKtBC,UALsB,EAKVC,UALU,GAKKF,mBALL,CAKVE,UALU;AAMxBC,mBANwB,GAMdJ,MAAMK,QAAN,GAAiBD,OANH;AAOxBE,0BAPwB,GAOPf,WAAWgB,KAAX,CAAiBC,IAAjB,CAAsBJ,QAAQK,SAA9B,EAA0C,YAA1C,CAPO;AAQxBC,gBARwB,GAQjBN,QAAQO,UAAR,CAAmBC,GAAnB,CAAuB;AAAA,qBAAM,GAAEC,EAAEC,KAAF,CAAQ,CAAR,CAAW,EAAnB;AAAA,aAAvB,EAA6CN,IAA7C,CAAmD,GAAnD,CARiB;;AAU9B;;AAV8B;AAAA,mBAWZhB,KAAM,GAAEc,cAAe,SAAQI,IAAK,GAApC,CAXY;;AAAA;AAW1BK,iBAX0B;;AAY9BA,kBAAMC,OAAN,CAAc;AAAA,qBAAQC,YAAYC,IAAZ,EAAkBZ,cAAlB,EAAkCJ,UAAlC,CAAR;AAAA,aAAd;;AAEA;AACAZ,qBACG6B,KADH,CACU,GAAEb,cAAe,UAASI,IAAK,GADzC,EAEGU,EAFH,CAEO,KAFP,EAEa,gBAAQ;AACjB,kBAAI,CAAC/B,EAAEgC,QAAF,CAAWN,KAAX,EAAkBO,IAAlB,CAAL,EAA8B;AAC5BL,4BAAYK,IAAZ,EAAkBhB,cAAlB,EAAkCJ,UAAlC;AACAa,sBAAMQ,IAAN,CAAWD,IAAX;AACD;AACF,aAPH,EAQGF,EARH,CAQO,QARP,EAQgB,gBAAQ;AACpB;AACApB,oBACGK,QADH,GAEGmB,KAFH,CAESC,MAFT,CAEgB;AAAA,uBAAKC,EAAEC,SAAF,KAAgBL,IAArB;AAAA,eAFhB,EAGGN,OAHH,CAGW,gBAAQ;AACfb,2BAAW;AACTmB,wBAAM5B,WAAWY,cAAX,EAA2BgB,IAA3B,CADG;AAETK,6BAAWL;AAFF,iBAAX;AAIAP,wBAAQA,MAAMU,MAAN,CAAa;AAAA,yBAAKG,MAAMN,IAAX;AAAA,iBAAb,CAAR;AACD,eATH;AAUD,aApBH,EAqBGF,EArBH,CAqBO,OArBP,EAqBe;AAAA,qBAAMrB,QAAN;AAAA,aArBf;;AAf8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;AAsCA,IAAMkB,cAAc,SAAdA,WAAc,CAACY,QAAD,EAAWvB,cAAX,EAA2BJ,UAA3B,EAA0C;AAC5D;AACA;AACA,MAAI,CAACP,aAAaJ,WAAWgB,KAAX,CAAiBuB,QAAjB,CAA0BxB,cAA1B,EAA0CuB,QAA1C,CAAb,CAAL,EAAwE;AACtE;AACD;;AAED;AACA,MAAME,OAAO;AACXT,UAAM5B,WAAWY,cAAX,EAA2BuB,QAA3B,CADK;AAEXF,eAAWE;;AAGb;AALa,GAAb,CAMA3B,WAAW6B,IAAX;AACD,CAfD","file":"gatsby-node.js","sourcesContent":["const globCB = require(`glob`)\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\n\nconst glob = Promise.promisify(globCB)\n\nconst createPath = require(`./create-path`)\nconst validatePath = require(`./validate-path`)\n\n// Path creator.\n// Auto-create pages.\n// algorithm is glob /pages directory for js/jsx/cjsx files *not*\n// underscored. Then create url w/ our path algorithm *unless* user\n// takes control of that page component in gatsby-node.\nexports.createPagesStatefully = async (\n  { store, boundActionCreators },\n  options,\n  doneCb\n) => {\n  const { createPage, deletePage } = boundActionCreators\n  const program = store.getState().program\n  const pagesDirectory = systemPath.posix.join(program.directory, `/src/pages`)\n  const exts = program.extensions.map(e => `${e.slice(1)}`).join(`,`)\n\n  // Get initial list of files.\n  let files = await glob(`${pagesDirectory}/**/?(${exts})`)\n  files.forEach(file => _createPage(file, pagesDirectory, createPage))\n\n  // Listen for new component pages to be added or removed.\n  chokidar\n    .watch(`${pagesDirectory}/**/*.{${exts}}`)\n    .on(`add`, path => {\n      if (!_.includes(files, path)) {\n        _createPage(path, pagesDirectory, createPage)\n        files.push(path)\n      }\n    })\n    .on(`unlink`, path => {\n      // Delete the page for the now deleted component.\n      store\n        .getState()\n        .pages.filter(p => p.component === path)\n        .forEach(page => {\n          deletePage({\n            path: createPath(pagesDirectory, path),\n            component: path,\n          })\n          files = files.filter(f => f !== path)\n        })\n    })\n    .on(`ready`, () => doneCb())\n}\nconst _createPage = (filePath, pagesDirectory, createPage) => {\n  // Filter out special components that shouldn't be made into\n  // pages.\n  if (!validatePath(systemPath.posix.relative(pagesDirectory, filePath))) {\n    return\n  }\n\n  // Create page object\n  const page = {\n    path: createPath(pagesDirectory, filePath),\n    component: filePath,\n  }\n\n  // Add page\n  createPage(page)\n}\n"]}