{"version":3,"sources":["../../../src/internal-plugins/query-runner/gatsby-node.js"],"names":["fs","require","joinPath","watchComponent","components","handlePageOrLayout","jsonDest","store","getState","program","directory","pageOrLayout","jsonName","existsSync","writeFile","isLayout","wrapperComponent","component","writeFileSync","componentWrapperPath","componentPath","exports","onCreatePage","page","boundActionCreators","onCreateLayout","layout"],"mappings":";;AAAA,IAAMA,KAAKC,QAAS,IAAT,CAAX;;eACqBA,QAAS,kBAAT,C;IAAbC,Q,YAAAA,Q;;gBACmBD,QAAS,iBAAT,C;IAAnBE,c,aAAAA,c;;AAER,IAAIC,aAAa,EAAjB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAS,wBAAgB;AAClD;AACA,QAAMC,WAAWJ,SACfK,MAAMC,QAAN,GAAiBC,OAAjB,CAAyBC,SADV,EAEd,QAFc,EAGd,MAHc,EAIfC,aAAaC,QAJE,CAAjB;AAMA,QAAI,CAACZ,GAAGa,UAAH,CAAcP,QAAd,CAAL,EAA8B;AAC5BN,SAAGc,SAAH,CAAaR,QAAb,EAAwB,IAAxB,EAA6B,YAAM,CAAE,CAArC;AACD;;AAED;AACA;AACA,QAAIK,aAAaI,QAAjB,EAA2B;AACzB,UAAMC,mBAAoB;;2BAEHL,aAAaM,SAAU;sBAC5BX,QAAS;;;GAH3B;AAOAN,SAAGkB,aAAH,CAAiBP,aAAaQ,oBAA9B,EAAoDH,gBAApD;AACD;;AAED,QAAMC,YAAYV,MAAMC,QAAN,GAAiBJ,UAAjB,CAA4BO,aAAaS,aAAzC,CAAlB;;AAEA,QAAIhB,WAAWa,UAAUG,aAArB,CAAJ,EAAyC;AACvC;AACD;;AAED;AACAjB,mBAAec,UAAUG,aAAzB;AACD,GAjC0B;AAAA,CAA3B;;AAmCAC,QAAQC,YAAR,GAAuB,gBAA0C;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjChB,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BiB,mBAA0B,QAA1BA,mBAA0B;;AAC/DnB,qBAAmBE,KAAnB,EAA0BgB,IAA1B;AACD,CAFD;;AAIAF,QAAQI,cAAR,GAAyB,iBAA4C;AAAA,MAAzCC,MAAyC,SAAzCA,MAAyC;AAAA,MAAjCnB,KAAiC,SAAjCA,KAAiC;AAAA,MAA1BiB,mBAA0B,SAA1BA,mBAA0B;;AACnEnB,qBAAmBE,KAAnB,EAA0BmB,MAA1B;AACD,CAFD","file":"gatsby-node.js","sourcesContent":["const fs = require(`fs`)\nconst { joinPath } = require(`../../utils/path`)\nconst { watchComponent } = require(`./query-watcher`)\n\nlet components = {}\n\nconst handlePageOrLayout = store => pageOrLayout => {\n  // Ensure page/layout component has a JSON file.\n  const jsonDest = joinPath(\n    store.getState().program.directory,\n    `.cache`,\n    `json`,\n    pageOrLayout.jsonName\n  )\n  if (!fs.existsSync(jsonDest)) {\n    fs.writeFile(jsonDest, `{}`, () => {})\n  }\n\n  // Ensure layout component has a wrapper entry component file (which\n  // requires its JSON file so the data + code are one bundle).\n  if (pageOrLayout.isLayout) {\n    const wrapperComponent = `\n  import React from \"react\"\n  import Component from \"${pageOrLayout.component}\"\n  import data from \"${jsonDest}\"\n\n  export default (props) => <Component {...props} {...data} />\n  `\n    fs.writeFileSync(pageOrLayout.componentWrapperPath, wrapperComponent)\n  }\n\n  const component = store.getState().components[pageOrLayout.componentPath]\n\n  if (components[component.componentPath]) {\n    return\n  }\n\n  // Watch the component to detect query changes.\n  watchComponent(component.componentPath)\n}\n\nexports.onCreatePage = ({ page, store, boundActionCreators }) => {\n  handlePageOrLayout(store)(page)\n}\n\nexports.onCreateLayout = ({ layout, store, boundActionCreators }) => {\n  handlePageOrLayout(store)(layout)\n}\n"]}