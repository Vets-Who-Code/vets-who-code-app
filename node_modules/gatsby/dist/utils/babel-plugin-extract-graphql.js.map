{"version":3,"sources":["../../src/utils/babel-plugin-extract-graphql.js"],"names":["graphql","require","getGraphQLTag","path","tag","get","isIdentifier","name","quasis","node","quasi","length","Error","text","value","raw","ast","parse","definitions","err","message","BabelPluginGraphQL","t","types","visitor","TaggedTemplateExpression","state","replaceWith","StringLiteral","module","exports"],"mappings":";;AAAA;AACA,IAAMA,UAAUC,QAAS,SAAT,CAAhB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAMC,MAAMD,KAAKE,GAAL,CAAU,KAAV,CAAZ;AACA,MAAI,CAACD,IAAIE,YAAJ,CAAiB,EAAEC,MAAO,SAAT,EAAjB,CAAL,EAA4C,OAAO,IAAP;;AAE5C,MAAMC,SAASL,KAAKM,IAAL,CAAUC,KAAV,CAAgBF,MAA/B;;AAEA,MAAIA,OAAOG,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIC,KAAJ,CACH,gEAAD,GACG,qDADH,GAEG,yBAHC,CAAN;AAKD;;AAED,MAAMC,OAAOL,OAAO,CAAP,EAAUM,KAAV,CAAgBC,GAA7B;;AAEA,MAAI;AACF,QAAMC,MAAMhB,QAAQiB,KAAR,CAAcJ,IAAd,CAAZ;;AAEA,QAAIG,IAAIE,WAAJ,CAAgBP,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,YAAM,IAAIC,KAAJ,CAAW,mDAAX,CAAN;AACD;AACD,WAAOI,GAAP;AACD,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,UAAM,IAAIP,KAAJ,CACH,yDAAwDC,IAAK,mBAC5DM,IAAIC,OACL,EAHG,CAAN;AAKD;AACF;;AAED,SAASC,kBAAT,OAA0C;AAAA,MAALC,CAAK,QAAZC,KAAY;;AACxC,SAAO;AACLC,aAAS;AACPC,+BAAyBtB,IAAzB,EAA+BuB,KAA/B,EAAsC;AACpC,YAAMV,MAAMd,cAAcC,IAAd,CAAZ;;AAEA,YAAI,CAACa,GAAL,EAAU,OAAO,IAAP;;AAEV,eAAOb,KAAKwB,WAAL,CACLL,EAAEM,aAAF,CAAiB,kCAAjB,CADK,CAAP;AAGD;AATM;AADJ,GAAP;AAaD;;AAEDP,mBAAmBnB,aAAnB,GAAmCA,aAAnC;AACA2B,OAAOC,OAAP,GAAiBT,kBAAjB","file":"babel-plugin-extract-graphql.js","sourcesContent":["/*  eslint-disable new-cap */\nconst graphql = require(`graphql`)\n\nfunction getGraphQLTag(path) {\n  const tag = path.get(`tag`)\n  if (!tag.isIdentifier({ name: `graphql` })) return null\n\n  const quasis = path.node.quasi.quasis\n\n  if (quasis.length !== 1) {\n    throw new Error(\n      `BabelPluginGraphQL: Substitutions are not allowed in graphql. ` +\n        `fragments. Included fragments should be referenced ` +\n        `as \\`...MyModule_foo\\`.`\n    )\n  }\n\n  const text = quasis[0].value.raw\n\n  try {\n    const ast = graphql.parse(text)\n\n    if (ast.definitions.length === 0) {\n      throw new Error(`BabelPluginGraphQL: Unexpected empty graphql tag.`)\n    }\n    return ast\n  } catch (err) {\n    throw new Error(\n      `BabelPluginGraphQL: GraphQL syntax error in query:\\n\\n${text}\\n\\nmessage:\\n\\n${\n        err.message\n      }`\n    )\n  }\n}\n\nfunction BabelPluginGraphQL({ types: t }) {\n  return {\n    visitor: {\n      TaggedTemplateExpression(path, state) {\n        const ast = getGraphQLTag(path)\n\n        if (!ast) return null\n\n        return path.replaceWith(\n          t.StringLiteral(`** extracted graphql fragment **`)\n        )\n      },\n    },\n  }\n}\n\nBabelPluginGraphQL.getGraphQLTag = getGraphQLTag\nmodule.exports = BabelPluginGraphQL\n"]}