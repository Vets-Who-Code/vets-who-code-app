{"version":3,"sources":["../../src/utils/checkpoints-promise.js"],"names":["Promise","require","_","emitter","waiters","on","stage","action","payload","map","newWaiter","resolve","w","events","difference","length","undefined","filter","module","exports","push"],"mappings":";;AAAA;AACA,IAAMA,UAAUC,QAAS,UAAT,CAAhB;AACA,IAAMC,IAAID,QAAS,QAAT,CAAV;;eAEoBA,QAAS,UAAT,C;IAAZE,O,YAAAA,O;;AAER,IAAIC,UAAU,EAAd;AACAD,QAAQE,EAAR,CAAY,iBAAZ,EAA8B,kBAAU;AACtC,MAAMC,QAAQC,OAAOC,OAAP,CAAeF,KAA7B;AACA;AACAF,YAAUA,QAAQK,GAAR,CAAY,aAAK;AACzB,QAAMC,YAAY;AAChBC,eAASC,EAAED,OADK;AAEhBE,cAAQX,EAAEY,UAAF,CAAaF,EAAEC,MAAf,EAAuB,CAACP,KAAD,CAAvB;AAFQ,KAAlB;;AAKA,QAAII,UAAUG,MAAV,CAAiBE,MAAjB,KAA4B,CAAhC,EAAmC;AACjC;AACAL,gBAAUC,OAAV;AACA,aAAOK,SAAP;AACD,KAJD,MAIO;AACL,aAAON,SAAP;AACD;AACF,GAbS,CAAV;;AAeA;AACAN,YAAUF,EAAEe,MAAF,CAASb,OAAT,CAAV;AACD,CApBD;;AAsBAc,OAAOC,OAAP,GAAiB;AAAA,MAAGN,MAAH,QAAGA,MAAH;AAAA,SACf,IAAIb,OAAJ,CAAY,mBAAW;AACrBI,YAAQgB,IAAR,CAAa;AACXT,aADW;AAEXE;AAFW,KAAb;AAID,GALD,CADe;AAAA,CAAjB","file":"checkpoints-promise.js","sourcesContent":["// Wait for things to happen before continuing.\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\n\nconst { emitter } = require(`../redux`)\n\nlet waiters = []\nemitter.on(`BOOTSTRAP_STAGE`, action => {\n  const stage = action.payload.stage\n  // Remove this stage from the waiters\n  waiters = waiters.map(w => {\n    const newWaiter = {\n      resolve: w.resolve,\n      events: _.difference(w.events, [stage]),\n    }\n\n    if (newWaiter.events.length === 0) {\n      // Call resolve function then remove by returning undefined.\n      newWaiter.resolve()\n      return undefined\n    } else {\n      return newWaiter\n    }\n  })\n\n  // Cleanup null entries\n  waiters = _.filter(waiters)\n})\n\nmodule.exports = ({ events }) =>\n  new Promise(resolve => {\n    waiters.push({\n      resolve,\n      events,\n    })\n  })\n"]}