{"version":3,"sources":["../../src/commands/develop-html.js"],"names":["fs","require","webpack","createErrorFromString","debug","webpackConfig","module","exports","program","directory","compilerConfig","Promise","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","unlinkSync"],"mappings":";;;;;;;;;;;;AACA,IAAMA,KAAKC,QAAS,IAAT,CAAX;AACA,IAAMC,UAAUD,QAAS,SAAT,CAAhB;;eACkCA,QAAS,gCAAT,C;IAA1BE,qB,YAAAA,qB;;AACR,IAAMC,QAAQH,QAAS,OAAT,EAAkB,aAAlB,CAAd;AACA,IAAMI,gBAAgBJ,QAAS,yBAAT,CAAtB;;AAEAK,OAAOC,OAAP;AAAA,sFAAiB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,qBADO,GACOD,OADP,CACPC,SADO;;;AAGfL,kBAAO,wBAAP;;AAEA;AALe;AAAA,mBAMcC,cAC3BG,OAD2B,EAE3BC,SAF2B,EAG1B,cAH0B,EAI3B,IAJ2B,EAK3B,CAAE,GAAF,CAL2B,CANd;;AAAA;AAMTC,0BANS;AAAA,6CAcR,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,sBAAQQ,eAAeE,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAClD,oBAAID,CAAJ,EAAO;AACL,yBAAOF,OAAOE,CAAP,CAAP;AACD;AACD,oBAAME,aAAc,GAAER,SAAU,wBAAhC;AACA,oBAAIO,MAAME,SAAN,EAAJ,EAAuB;AACrB,sBAAIC,gBAAgBH,MAAMI,MAAN,GAAeC,MAAnC;AACA,yBAAOR,OACLV,sBAAsBgB,cAAc,CAAd,CAAtB,EAAyC,GAAEF,UAAW,MAAtD,CADK,CAAP;AAGD;;AAED;AACA,oBAAI;AACFjB,qBAAGsB,UAAH,CAAcL,UAAd;AACD,iBAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;;AAED,uBAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,eApBD;AAqBD,aAtBM,CAdQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"develop-html.js","sourcesContent":["/* @flow */\nconst fs = require(`fs`)\nconst webpack = require(`webpack`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\nconst debug = require(`debug`)(`gatsby:html`)\nconst webpackConfig = require(`../utils/webpack.config`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop-html`,\n    null,\n    [`/`]\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        return reject(\n          createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n        )\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(outputFile)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n\n      return resolve(null, stats)\n    })\n  })\n}\n"]}