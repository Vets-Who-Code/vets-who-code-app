{"version":3,"sources":["../../src/commands/serve.js"],"names":["serve","require","signalExit","module","exports","port","program","open","directory","parseInt","server","code","signal","stop"],"mappings":";;AAAA;AACA,IAAMA,QAAQC,QAAS,OAAT,CAAd;AACA,IAAMC,aAAaD,QAAS,aAAT,CAAnB;;AAEAE,OAAOC,OAAP,GAAiB,mBAAW;AAAA,MACpBC,IADoB,GACMC,OADN,CACpBD,IADoB;AAAA,MACdE,IADc,GACMD,OADN,CACdC,IADc;AAAA,MACRC,SADQ,GACMF,OADN,CACRE,SADQ;;AAE1BH,SAAO,OAAOA,IAAP,KAAiB,QAAjB,GAA2BI,SAASJ,IAAT,EAAe,EAAf,CAA3B,GAAgDA,IAAvD;;AAEA,MAAIK,SAASV,MAAO,GAAEQ,SAAU,SAAnB,EAA6B,EAAEH,IAAF,EAAQE,IAAR,EAA7B,CAAb;;AAEAL,aAAW,UAACS,IAAD,EAAOC,MAAP,EAAkB;AAC3BF,WAAOG,IAAP;AACD,GAFD;AAGD,CATD","file":"serve.js","sourcesContent":["/* @flow weak */\nconst serve = require(`serve`)\nconst signalExit = require(`signal-exit`)\n\nmodule.exports = program => {\n  let { port, open, directory } = program\n  port = typeof port === `string` ? parseInt(port, 10) : port\n\n  let server = serve(`${directory}/public`, { port, open })\n\n  signalExit((code, signal) => {\n    server.stop()\n  })\n}\n"]}