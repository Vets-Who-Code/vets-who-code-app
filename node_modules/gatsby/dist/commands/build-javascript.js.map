{"version":3,"sources":["../../src/commands/build-javascript.js"],"names":["webpack","require","webpackConfig","module","exports","program","directory","compilerConfig","Promise","resolve","run"],"mappings":";;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,IAAMC,gBAAgBD,QAAS,yBAAT,CAAtB;;AAEAE,OAAOC,OAAP;AAAA,sFAAiB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,qBADO,GACOD,OADP,CACPC,SADO;AAAA;AAAA,mBAGcJ,cAC3BG,OAD2B,EAE3BC,SAF2B,EAG1B,kBAH0B,CAHd;;AAAA;AAGTC,0BAHS;AAAA,6CASR,IAAIC,OAAJ,CAAY,mBAAW;AAC5BR,sBAAQO,eAAeE,OAAf,EAAR,EAAkCC,GAAlC,CAAsC;AAAA,uBAAMD,SAAN;AAAA,eAAtC;AACD,aAFM,CATQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"build-javascript.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\n\nmodule.exports = async program => {\n  const { directory } = program\n\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-javascript`\n  )\n\n  return new Promise(resolve => {\n    webpack(compilerConfig.resolve()).run(() => resolve())\n  })\n}\n"]}