{"version":3,"sources":["../../src/schema/create-key.js"],"names":["invariant","require","regex","RegExp","module","exports","key","replace"],"mappings":";;AACA,IAAMA,YAAYC,QAAS,WAAT,CAAlB;AACA,IAAMC,QAAQ,IAAIC,MAAJ,CAAY,eAAZ,EAA6B,GAA7B,CAAd;;AAEA;;;;;AAKAC,OAAOC,OAAP,GAAiB,UAACC,GAAD,EAAyB;AACxC;AACAN,YACE,OAAOM,GAAP,KAAgB,QADlB,EAEG,+CAA8CA,GAAI,EAFrD;;AAKA,SAAOA,IAAIC,OAAJ,CAAYL,KAAZ,EAAoB,GAApB,CAAP;AACD,CARD","file":"create-key.js","sourcesContent":["// @flow\nconst invariant = require(`invariant`)\nconst regex = new RegExp(`[^a-zA-Z0-9_]`, `g`)\n\n/**\n * GraphQL field names must be a string and cannot contain anything other than\n * alphanumeric characters and `_`. They also can't start with `__` which is\n * reserved for internal fields (`___foo` doesn't work either).\n */\nmodule.exports = (key: string): string => {\n  // Check if the key is really a string otherwise GraphQL will throw.\n  invariant(\n    typeof key === `string`,\n    `Graphql field name (key) is not a string -> ${key}`\n  )\n\n  return key.replace(regex, `_`)\n}\n"]}